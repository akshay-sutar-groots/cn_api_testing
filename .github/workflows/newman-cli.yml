# This is a basic workflow to help you get started with Actions
name: Automaton API Tests Using Newman CLI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

# Allows you to run this workflow manually from the Actions tab
jobs:
  # This workflow contains a single job called "test-api"
  test-api:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} 
      
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v3 # Use v2 since v3 may not exist

      # Create directory
      - name: Create directory
        run: mkdir TestResults

      # Install Node On The Runner
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16 # Specify a valid Node.js version here

      # Install newman globally
      - name: Install Newman
        run: |
          npm install -g newman
          npm install -g newman-reporter-htmlextra
          
      # # Run the POSTMAN collection
      # - name: Run Collections
      #   run: newman run "collections/Functional-Tests.postman_collection.json" -e "collections/DEV.postman_environment.json" -g "collections/workspace.postman_globals.json" -r cli,htmlextra --reporter-htmlextra-export TestResults/report.html
      #   continue-on-error: true

        # Run the POSTMAN collection
      - name: Run Collections
        run: newman run "collections/reqres.json" -r cli,htmlextra --reporter-htmlextra-export TestResults/report.html
        continue-on-error: true
        
      # # Publish The Reports
      # - name: Publish reports
      #   uses: actions/upload-artifact@v3
      #   with: 
      #       name: Reports
      #       path: TestResults

      # # Publish The Reports
      # - name: Deploy
      #   uses: akshay-sutar-groots/cn_api_testing@v3
      #   with:
      #     folder: TestResults
      #     branch: gh-pages

      # Extract Zip file
      - name: Extract Zip file (Reports.zip)
        run: |
          unzip TestResults/Reports.zip
          ls -a
      
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v1
        with: 
          path: 'TestResults/Reports/report.html'

      - name: Deploy to Github Pages
        uses: actions/deploy-pages@v2
        id: deployment
